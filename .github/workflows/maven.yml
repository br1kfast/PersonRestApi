# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Check Out Repo 
      uses: actions/checkout@v2

     #Docker duild push
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
      
      #Heroku deploy
    - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: "person-api-br1kfast" #Must be unique in Heroku
        heroku_email: "uts@student.bmstu.ru"
        usedocker: true
     #Run api test   
    - name: Run API Tests
      id: run-newman
      uses: anthonyvscode/newman-action@v1
      with:
        collection: postman/[inst] Lab1.postman_collection.json
        environment: postman/[inst][heroku] Lab1.postman_environment.json
        delayRequest: 50
        reporters: cli

    - uses: education/autograding@v1
      id: autograder
      continue-on-error: true

    - name: badges branch and make dir
      run: |
        git checkout badges 2>/dev/null ||git checkout -b badges
        mkdir -p .github/badges
    - name: points badge
      uses: emibcn/badge-action@v1
      with:
        LABEL:  'Points' 
        STATUS: ${{ steps.autograder.outputs.Points }}
        COLOR: cyan
        path:  '.github/badges/points.svg' 

    - name: Commit badge
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add '.github/badges/points.svg'
        git commit -m "Add/Update badge"
        continue-on-error: true

    - name: Push badge commit
      uses: ad-m/github-push-action@master
      if: success()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: badges
